CREATE TABLE PICTURE (
		ID NUMBER(22 , 0) NOT NULL,
		CONTENTTYPE VARCHAR2(20),
		OWNER NUMBER(22 , 0),
		CONTENT LONG RAW
	);

CREATE TABLE ROLE_T (
		NAME VARCHAR2(20),
		ID NUMBER(22 , 0) NOT NULL,
		DESCRIPTION CLOB,
		OWNER NUMBER(22 , 0)
	);

CREATE TABLE USER_T (
		FIRSTNAME VARCHAR2(32),
		LASTNAME VARCHAR2(32),
		EMAIL VARCHAR2(48),
		LOCALE VARCHAR2(16),
		TIMEZONE VARCHAR2(32),
		PASSWORD_PW VARCHAR2(48),
		PASSWORD_SLT VARCHAR2(20),
		VALIDATED NUMBER(22 , 0),
		SUPERUSER NUMBER(22 , 0),
		UNIQUEID VARCHAR2(32),
		ID NUMBER(22 , 0) NOT NULL
	);

CREATE UNIQUE INDEX PICTURE_OWNER ON PICTURE (OWNER ASC);

CREATE UNIQUE INDEX ROLE_T_OWNER ON ROLE_T (OWNER ASC);

CREATE INDEX PICTURE_PK ON PICTURE (ID ASC);

CREATE INDEX USER_T_PK ON USER_T (ID ASC);

CREATE INDEX ROLE_T_PK ON ROLE_T (ID ASC);

CREATE UNIQUE INDEX USER_T_EMAIL ON USER_T (EMAIL ASC);

CREATE UNIQUE INDEX USER_T_UNIQUEID ON USER_T (UNIQUEID ASC);

CREATE OR REPLACE SEQUENCE 
Numeric Overflow;

CREATE OR REPLACE SEQUENCE 
Numeric Overflow;

CREATE OR REPLACE SEQUENCE 
Numeric Overflow;

ALTER TABLE USER_T ADD CONSTRAINT USER_T_PK PRIMARY KEY (ID);

ALTER TABLE PICTURE ADD CONSTRAINT PICTURE_PK PRIMARY KEY (ID);

ALTER TABLE USER_T ADD CONSTRAINT SYS_C004068 CHECK ("ID" IS NOT NULL);

ALTER TABLE ROLE_T ADD CONSTRAINT SYS_C004072 CHECK ("ID" IS NOT NULL);

ALTER TABLE ROLE_T ADD CONSTRAINT ROLE_T_PK PRIMARY KEY (ID);

ALTER TABLE PICTURE ADD CONSTRAINT SYS_C004070 CHECK ("ID" IS NOT NULL);

CREATE OR REPLACE TRIGGER USER_T_TRIGGER BEFORE INSERT ON user_t FOR EACH ROW WHEN (new.id is null) BEGIN SELECT user_t_sequence.nextval INTO :new.id FROM DUAL; END;;

CREATE OR REPLACE TRIGGER PICTURE_TRIGGER BEFORE INSERT ON picture FOR EACH ROW WHEN (new.id is null) BEGIN SELECT picture_sequence.nextval INTO :new.id FROM DUAL; END;;

CREATE OR REPLACE TRIGGER ROLE_T_TRIGGER BEFORE INSERT ON role_t FOR EACH ROW WHEN (new.id is null) BEGIN SELECT role_t_sequence.nextval INTO :new.id FROM DUAL; END;;

